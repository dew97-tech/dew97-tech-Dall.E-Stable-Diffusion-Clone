import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { FormField, Loader } from '../components';

import { preview } from '../assets';
import { getRandomPrompts } from '../utils';

const CreatePost = () => {
    const navigate = useNavigate();
    const [form, setForm] = useState({
        name: '',
        prompt: '',
        photo: '',
    });
    const [generatingImg, setGeneratingImage] = useState(false);
    const [loading, setLoading] = useState(false);

    const handleSubmit = async (e) => {
        e.preventDefault();

        if (form.photo && form.photo) {
            setLoading(true);
            try {
                const response = await fetch(
                    'http://localhost:8080/api/v1/post',
                    {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(form),
                    }
                );

                await response.json();
                navigate('/');
            } catch (error) {
                alert(error);
            } finally {
                setLoading(false);
            }
        } else {
            alert('Please Enter A Prompt And Generate An Image');
        }
    };

    const handleChange = (e) => {
        setForm({ ...form, [e.target.name]: e.target.value });
        // setForm({ ...form, [e.target.name]: 'Dew' });
    };

    const handleSurpriseMe = () => {
        const randomPrompt = getRandomPrompts(form.prompt);
        setForm({ ...form, prompt: randomPrompt });
    };

    const generateImage = async () => {
        if (form.prompt) {
            try {
                setGeneratingImage(true);

                const response = await fetch(
                    'http://localhost:8080/api/v1/dalle',
                    {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ prompt: form.prompt }),
                    }
                );

                const data = await response.json();
                setForm({
                    ...form,
                    photo: `data:image/jpeg;base64,${data.photo}`,
                });
            } catch (error) {
                alert(error);
                console.log(error);
            } finally {
                setGeneratingImage(false);
            }
        } else {
            alert('Please Enter A Prompt');
        }
    };
    return (
        <section className="max-w-7x1 mx-auto">
            <div>
                <h1 className="font-extrabold text-[#222328] text-[32px]">
                    Create
                </h1>
                <p className="mt-2 text-[#666e75] text-[16px] max-w-[800px]">
                    Create imaginative and visually stunning images generated by
                    DALL-E AI
                </p>
            </div>
            <form className="mt-16 max-w-3x1" onSubmit={handleSubmit}>
                <div className="flex flex-col gap-5">
                    <FormField
                        labelName="Your Name"
                        type="text"
                        name="name"
                        placeholder="John Doe"
                        value={form.name}
                        handleChange={handleChange}
                    />
                    <FormField
                        labelName="Prompt"
                        type="text"
                        name="prompt"
                        placeholder="a pencil and watercolor drawing of a bright city in the future with flying cars"
                        value={form.prompt}
                        handleChange={handleChange}
                        isSurpriseMe
                        handleSurpriseMe={handleSurpriseMe}
                    />
                    <div
                        className="relative bg-gray-50 border border-gray-300 
          text-gray-900 text-sm rounded-lg focus:ring-blue-500 
          focus:border-blue-500 w-64 p-3 h-64 
          flex justify-center items-center">
                        {form.photo ? (
                            <img
                                src={form.photo}
                                alt={form.prompt}
                                className="w-full h-full object-contain"
                            />
                        ) : (
                            <img
                                src={preview}
                                alt="Preview"
                                className="w-9/12 h-9/12 object-contain opacity-40"
                            />
                        )}
                        {generatingImg && (
                            <div className="absolute inset-0 z-0 flex justify-center items-center bg-[rgba(0,0,0,0.5)] rounded-lg">
                                <Loader />
                            </div>
                        )}
                    </div>
                </div>
                <div className="mt-5 flex gap-5">
                    <button
                        type="button"
                        onClick={generateImage}
                        className="text-white bg-green-700 font-medium rounded-md text-sm w-full sm:w-auto px-5 py-2.5 text-center">
                        {generatingImg ? 'Generating...' : 'Generate'}
                    </button>
                </div>
                <div className="mt-10">
                    <p className="mt-2 marker:text-grey-300 text-[14px]">
                        Once You Have Created The Image You Want, You Can Share
                        It With Others In The Community
                    </p>
                    <button
                        type="submit"
                        className="mt-3 text-white bg-blue-500 font-medium rounded-md text-sm w-full sm:w-auto px-5 py-2.5 text-center">
                        {loading ? 'Sharing...' : 'Share with Friends'}
                    </button>
                </div>
            </form>
        </section>
    );
};

export default CreatePost;
